
[gcode_macro PRINT_START]
gcode:        
  
# 01 This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}  
  {% set target_extruder = params.EXTRUDER|int %}  # SEPT 26, 2023
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}
  #{% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %} 

# 02 Homes the printer and sets absolute positioning and updates the Stealthburner leds.
    SET_DISPLAY_TEXT MSG="Homing.."                     # Displays info (M117 Alternative)
 #SET PRINTER COLORS TO RED TO SAY WE ARE "Homing.." (YELLOW)
    SET_LED LED=btt_mini12864 RED=0.5098 GREEN=0.4863 BLUE=0 INDEX=1 TRANSMIT=0 ; KNOB LEFT
    SET_LED LED=btt_mini12864 RED=0.5098 GREEN=0.4863 BLUE=0 INDEX=2 TRANSMIT=0 ; KNOB RIGHT
    SET_LED LED=btt_mini12864 RED=0.5098 GREEN=0.4863 BLUE=0 INDEX=3            ; SCREEN DISPLAY
    G28                                                 # Full home (XYZ)
    G90                                                 # Absolute position
    BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

# 03a Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed = {target_bed}c"          # Displays info
#SET PRINTER COLORS TO RED TO SAY WE ARE "Heating..."  (ORANGE)
    SET_LED LED=btt_mini12864 RED=0.5098 GREEN=0.1686 BLUE=0 INDEX=1 TRANSMIT=1 ; KNOB LEFT
    SET_LED LED=btt_mini12864 RED=0.5098 GREEN=0.1686 BLUE=0 INDEX=2 TRANSMIT=1 ; KNOB RIGHT
    SET_LED LED=btt_mini12864 RED=0.5098 GREEN=0.1686 BLUE=0 INDEX=3            ; SCREEN DISPLAY
    M106 S255                                           # Turns on the PT-fan
    G1 X{x_wait} Y{y_wait} Z5 F9000                    # Goes to center of the bed (F value = speed in mm/min)
    M140 S{target_bed}                                  # M140 Heats Bed ASAP (M190 Waits) Sept 29, 2023
    M104 S150                                           # Heats Nozzle with Bed Sept 29, 2023
    #M190 S{target_bed}                                  # Sets the target temp for the bed
    #SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    #TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

# 03b If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed/Nozz = {target_bed}c"          # Displays info
#SET PRINTER COLORS TO RED TO SAY WE ARE "Heating..."  (ORANGE)
    SET_LED LED=btt_mini12864 RED=0.5098 GREEN=0.1686 BLUE=0 INDEX=1 TRANSMIT=1 ; KNOB LEFT
    SET_LED LED=btt_mini12864 RED=0.5098 GREEN=0.1686 BLUE=0 INDEX=2 TRANSMIT=1 ; KNOB RIGHT
    SET_LED LED=btt_mini12864 RED=0.5098 GREEN=0.1686 BLUE=0 INDEX=3            ; SCREEN DISPLAY
    M140 S{target_bed}                                  # M140 Heats Bed ASAP (M190 Waits) Sept 29, 2023
    M104 S150                                           # M104 Heats Nozzle ASAP (M109 Waits) Oct 4, 2023
    G4 S60                                              # Waits 60 seconds for the bedtemp to stabilize
  {% endif %}

# 04 Bed mesh sequence max temp 150c for Octotap v1.0  (2 of 2)
    SET_DISPLAY_TEXT MSG="Bed = {target_bed}c"       # Displays info
                                                        # SB LED status here
    M109 S150                                           # M109 waits for Nozzle to reach 150c (M104 Waits) 
    M190 S{target_bed}                                  # M190 Heats Bed ASAP (M140 ASAP)
    #BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX} FORCE_NEW_MESH=True   # Oct 5, 2023 
    BED_MESH_CALIBRATE                                  # Starts bed mesh  
    #PRINT_AREA_BED_MESH_CALIBRATE                       # Print area bed mesh
    G1 X340 Y345 Z5 F5000                               # Clean Nozzle position 

# 05 Heats up the nozzle up to target via data from slicer
    SET_DISPLAY_TEXT MSG="Nozzle = {target_extruder}c"    # Displays info
                                                        # SB LED status here
    M107                                                  # Turns off partcooling fan

# 06 Clean nozzle sequence @ final material temperature
    SET_DISPLAY_TEXT MSG="Cleaning nozzle"              # Displays info
#SET PRINTER COLORS TO RED TO SAY WE ARE "Cleaning nozzle"  (PURPLE)
    SET_LED LED=btt_mini12864 RED=0.4 GREEN=0 BLUE=0.8 INDEX=1 TRANSMIT=1 ; KNOB LEFT
    SET_LED LED=btt_mini12864 RED=0.4 GREEN=0 BLUE=0.8 INDEX=2 TRANSMIT=1 ; KNOB RIGHT
    SET_LED LED=btt_mini12864 RED=0.4 GREEN=0 BLUE=0.8 INDEX=3            ; SCREEN DISPLAY

                                                        # SB LED status here
    M109 S{target_extruder}                             # M109 Set Extruder temp and wait, 'S' active temp SEPT 26, 2023
    CLEAN_NOZZLE
    G1 Z5

# 07 Print sequence starts here
    SET_DISPLAY_TEXT MSG="Printing..."                  # Displays info
#SET PRINTER COLORS TO RED TO SAY WE ARE "Printing..."  (BLUE)
    SET_LED LED=btt_mini12864 RED=0 GREEN=0.2863 BLUE=0.349 INDEX=1 TRANSMIT=1     ; KNOB LEFT
    SET_LED LED=btt_mini12864 RED=0 GREEN=0.2863 BLUE=0.349 INDEX=2 TRANSMIT=1     ; KNOB RIGHT
    SET_LED LED=btt_mini12864 RED=0 GREEN=0.2863 BLUE=0.349 INDEX=3                ; SCREEN DISPLAY
    G90                                                 # Absolute position
    #G1 X100 E20 F1000                                   # Purge line


[gcode_macro PRINT_END]
description: tasks to reset the printer state and cool everything down.
gcode:
    SET_DISPLAY_TEXT MSG="Print End"                    # Displays info
    #led_status_green                                   # Sets SB-leds to heating-
#SET PRINTER COLORS TO RED TO SAY "Print End" (GREEN)
    SET_LED LED=btt_mini12864 RED=0 GREEN=0.5216 BLUE=0 INDEX=1 TRANSMIT=0 ; KNOB LEFT
    SET_LED LED=btt_mini12864 RED=0 GREEN=0.5216 BLUE=0 INDEX=2 TRANSMIT=0 ; KNOB RIGHT
    SET_LED LED=btt_mini12864 RED=0 GREEN=0.5216 BLUE=0 INDEX=3            ; SCREEN DISPLAY
    #TURN_OFF_HEATERS
    M107                                                # turn off fans
    SAFE_LIFT_Z Z=20 F=9000.0                           # Change Oct 10, 3:53pm Z=10 > Z=20  (F value = speed in mm/min)
    G1 X340 Y345 F9000                                  # Goes to Clean Nozzle position without lowering                    Oct 12, 2023
    M400                                                # Wait for move to finish                                           Oct 12, 2023
    G1 Z5 F9000                                         # Lower nozzle to Clean Nozzle position (waits for temp)            Oct 12, 2023
    M109 S190                                           # Wait for nozzle to reach 190c
    CLEAN_NOZZLE
    TURN_OFF_HEATERS
    G1 Z5 
    G4 S120                                             # Wait for 120 seconds
    M107                                                # turn off fans
  


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_DISPLAY_TEXT MSG="Print Cancelled"              # Displays info
    #led_status_red                                      # Sets SB-leds to heating-mode

#SET PRINTER COLORS TO RED TO SAY WE ARE PRINTING (RED)
    SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=0 ; KNOB LEFT
    SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0 ; KNOB RIGHT
    SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3            ; SCREEN DISPLAY
    CLEAR_PAUSE
    SAFE_LIFT_Z Z=20 F=9000.0                           # Change Oct 10, 3:53pm Z=10 > Z=20  (F value = speed in mm/min)
    G1 X340 Y345 F9000                                  # Goes to Clean Nozzle position without lowering                    Oct 12, 2023
    M400                                                # Wait for move to finish                                           Oct 12, 2023
    G1 Z5 F9000                                         # Lower nozzle to Clean Nozzle position (waits for temp)            Oct 12, 2023
    M109 S190                                           # Wait for nozzle to reach 190c
#SET PRINTER COLORS TO RED TO SAY WE ARE "Cleaning nozzle"  (PURPLE)
    SET_LED LED=btt_mini12864 RED=0.4 GREEN=0 BLUE=0.8 INDEX=1 TRANSMIT=1 ; KNOB LEFT
    SET_LED LED=btt_mini12864 RED=0.4 GREEN=0 BLUE=0.8 INDEX=2 TRANSMIT=1 ; KNOB RIGHT
    SET_LED LED=btt_mini12864 RED=0.4 GREEN=0 BLUE=0.8 INDEX=3            ; SCREEN DISPLAY
    CLEAN_NOZZLE
#SET PRINTER COLORS TO RED TO SAY WE ARE PRINTING (RED)
    SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=0 ; KNOB LEFT
    SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0 ; KNOB RIGHT
    SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3            ; SCREEN DISPLAY
    TURN_OFF_HEATERS
    G1 Z5
    BED_MESH_CLEAR
    BASE_CANCEL_PRINT
    G4 S120                                             # Wait for 120 seconds
    M107                                                # turn off fans
  

#[gcode_macro NOZZLE_CHANGE]
#gcode:
#    SAVE_GCODE_STATE NAME=PARK_CENTER
#    ; park the head at the front of the printer
#    G90
#    G1 X175 Y175 Z100 F3000.0
#    RESTORE_GCODE_STATE NAME=PARK_CENTER

[gcode_macro _G32] # Oct 10, 2023
gcode:
    STATUS_HOMING
    BED_MESH_CLEAR

    ; stealth chop tuning process
    # motors off
    ;M84
    ;G4 P200

    # enable motors (this seems to energize the steppers in Klipper and no micro-moves are needed)
    ; SET_STEPPER_ENABLE STEPPER=stepper_x  ENABLE=1
    ; SET_STEPPER_ENABLE STEPPER=stepper_y  ENABLE=1
    ; SET_STEPPER_ENABLE STEPPER=stepper_z  ENABLE=1
    ; SET_STEPPER_ENABLE STEPPER=stepper_z1 ENABLE=1
    ; SET_STEPPER_ENABLE STEPPER=stepper_z2 ENABLE=1
    ; SET_STEPPER_ENABLE STEPPER=stepper_z3 ENABLE=1
    #wait at least 130ms for StealthChop to sense standstill current
    ;G4 P200

    #now proceed to home as normal
    STATUS_HOMING
    G28
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    STATUS_HOMING
    G28

[gcode_macro PARK_REAR]

gcode:

 {% if "xyz" not in printer.toolhead.homed_axes %} # If printer not homed                Oct 19, 2023
    G28                                            # Home all axes                       Oct 19, 2023
 {% endif %}                                       # End statement                       Oct 19, 2023
 
    SAVE_GCODE_STATE NAME=PARK_REAR
    ; park the head at the front of the printer
    G90
    #G1 X150 Y300 F3000.0
    #G1 X340 Y345 Z5 F10000.0
    SAFE_LIFT_Z Z=20 F=9000.0                           # Change Oct 10, 3:53pm Z=10 > Z=20  (F value = speed in mm/min)
    G1 X340 Y345 F9000                                  # Goes to Clean Nozzle position without lowering                    Oct 12, 2023
    M400                                                # Wait for move to finish                                           Oct 12, 2023
    G1 Z5 F9000                                       # Lower nozzle to Clean Nozzle position (waits for temp)            Oct 12, 2023
    RESTORE_GCODE_STATE NAME=PARK_REAR


[gcode_macro PARK_FRONT]
gcode:
 
 {% if "xyz" not in printer.toolhead.homed_axes %} # If printer not homed                Oct 19, 2023
    G28                                            # Home all axes                       Oct 19, 2023
 {% endif %}                                       # End statement                       Oct 19, 2023
 
    SAVE_GCODE_STATE NAME=PARK_FRONT
    ; park the head at the front of the printer
    G90
    G1 X175 Y0 Z30 F9000.0
    RESTORE_GCODE_STATE NAME=PARK_FRONT

[gcode_macro SAFE_LIFT_Z]
gcode:
    SAVE_GCODE_STATE NAME=SAFE_LIFT_Z
    # user parameters
    {% set z_height      = params.Z|default(0.0)|float %}
    {% set speed         = params.F|default(printer.gcode_move.speed)|int %}
    {% set axis_maximum  = printer.toolhead.axis_maximum %}
	{% set position      = printer.toolhead.position     %}

    # compute the minimum safe upward move size
    {% set z_height = [z_height, axis_maximum.z - position.z]|min|float%}

    G91
    G1 Z{z_height} F{speed}

    RESTORE_GCODE_STATE NAME=SAFE_LIFT_Z

[gcode_macro PRINT_AREA_BED_MESH_CALIBRATE]
description: Sets the bed mesh area based on the size & location of the print
gcode:
    # defaults from bed_mesh
    {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
    {% set bed_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
    {% set bed_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
    {% set bed_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
    {% set bed_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}
    {% set max_probe_count_x = bedMeshConfig.probe_count.split(",")[0]|int %}
    {% set max_probe_count_y = bedMeshConfig.probe_count.split(",")[1]|int %}
    # user parameters
    {% set area_min_x = params.PRINT_START_X|default(bed_min_x)|float %}
    {% set area_min_y = params.PRINT_START_Y|default(bed_min_y)|float %}
    {% set area_max_x = params.PRINT_END_X|default(bed_max_x)|float %}
    {% set area_max_y = params.PRINT_END_Y|default(bed_max_y)|float %}
    {% set mesh_area_padding = params.MESH_ARE_PADDING|default(5.0)|float %}
    {% set min_probe_count_x = params.MIN_PROBE_COUNT_X|default(3)|int %}
    {% set min_probe_count_y = params.MIN_PROBE_COUNT_Y|default(3)|int %}

    # add padding to the print area if possible
    {% set area_min_x = [area_min_x - mesh_area_padding, bed_min_x]|max %}
    {% set area_min_y = [area_min_y - mesh_area_padding, bed_min_y]|max %}
    {% set area_max_x = [area_max_x + mesh_area_padding, bed_max_x]|min %}
    {% set area_max_y = [area_max_y + mesh_area_padding, bed_max_y]|min %}

    # compute raw scaled values for the probe counts from 0 to max_probe_count_x/y
    {% set probe_count_unscaled_x = ((area_max_x - area_min_x)/bed_max_x) * max_probe_count_x|float %}
    {% set probe_count_unscaled_y = ((area_max_y - area_min_y)/bed_max_y) * max_probe_count_y|float %}

    # scale those values up from: 0 - min_probe_count_x/y to the scale: min_probe_count_x/y - min_probe_count_x/y
    {% set probe_count_x = ((max_probe_count_x - min_probe_count_x) * probe_count_unscaled_x / max_probe_count_x + min_probe_count_x)|round|int %}
    {% set probe_count_y = ((max_probe_count_y - min_probe_count_y) * probe_count_unscaled_y / max_probe_count_y + min_probe_count_y)|round|int %}

    {% set relative_reference_index = (((probe_count_x * probe_count_y) - 1) / 2)|int %}

    BED_MESH_CALIBRATE MESH_MIN={area_min_x},{area_min_y} MESH_MAX={area_max_x},{area_max_y} PROBE_COUNT={("%d,%d" % (probe_count_x,probe_count_y))} RELATIVE_REFERENCE_INDEX={relative_reference_index}

[gcode_macro PURGE_LINE]
gcode:
    SAVE_GCODE_STATE NAME=PURGE_LINE
    {% set purge_start_x = params.PRINT_START_X|default(5.0)|float %}
    {% set purge_start_y = params.PRINT_START_Y|default(-5.0)|float %}

    ; purge/prime nozzle
    G90 ; use absolute coordinates
    ; go to the start of the print area, but -5 in Y
    G1 X{purge_start_x} Y{purge_start_y} Z0.3 F7200.0 ; go to the purge start location
    G91 ; relative coordinates
    M83 ; extruder relative mode
    G92 E0.0
    G1 X40.0 E10.0 F1000.0  ; narrow start line
    G1 X40.0 E15.0 F1000.0  ; priming thick outro line
    G92 E0.0
    G1 X3.0 Y3.0 F1000.0    ; move the nozzle away from the end of the purge line so the print doesnt drage the nozzle back throught it.
    G1 F7200.0

    RESTORE_GCODE_STATE NAME=PURGE_LINE


[gcode_macro PRINT_WARMUP]
description: Perform initial homing and heating tasks
variable_parameter_EXTRUDER_TEMP : 0
variable_parameter_BED_TEMP : 0
variable_parameter_PRINT_START_X : 0
variable_parameter_PRINT_START_Y : 0
variable_parameter_PRINT_END_X : 0
variable_parameter_PRINT_END_Y : 0
variable_callback : None
gcode:
    #{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(240)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP * 1.0 %}
    {% set BED_TEMP = params.BED_TEMP|default(90)|float %}
   # SHOW_BUILD_SHEET

    M104 S{EXTRUDER_TEMP * 0.75}        ; set extruder temperature to 75%
    M140 S{BED_TEMP}                    ; set bed temprature
    M106 S25                            ; Enable the part cooling fan to keep the probe and cooling ducts cool during heat-up
    G32                                 ; home all axes
    STATUS_HEATING
    PARK_CENTER                         ; place tool head in the middle of the print volume for even frame heating

    # wait for top bed sensor to be in thermal equilibrium:
    HEAT_SOAK HEATER='heater_bed' TARGET={BED_TEMP} SOAKER='temperature_sensor top_bed' CANCEL='CANCEL_PRINT'


[gcode_macro list_sensors]
gcode:
  { action_respond_info(printer.heaters.available_heaters | join(', ')) }
  { action_respond_info(printer.heaters.available_sensors | join(', ')) }


######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

