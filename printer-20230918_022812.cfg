#Printer.cfg#
[include mainsail.cfg]
[include neopixel.cfg] # Neopixel LED config
[include clean_nozzle.cfg] # Nozzle scrubber config
#[include macros.cfg]




# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_37000A001750535556323420-if00
restart_method: command

##-----------THERMISTORS-----------------------

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor octopus]
sensor_type: temperature_mcu
min_temp: 10
max_temp: 100

[temperature_sensor enclosure]
sensor_type: Generic 3950
sensor_pin: PF5

[verify_heater heater_bed] check_gain_time: 150
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 300  
#Max speed
#max_accel: 15000             #High Setting
#max_accel_to_decel: 7500
#max_z_velocity: 20
#max_z_accel: 150
#square_corner_velocity: 5

#3DPrinterSchool.com optimized setting-------------------------------
max_accel: 10000             #Max 4000
max_accel_to_decel: 5000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0


#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left - Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps:32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG6
position_min: 0
##  Uncomment for 350mm build
position_endstop: 345
position_max: 345
position_min: 0
homing_speed: 100   #Max 100
homing_retract_dist: 5
homing_positive_dir: true
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.8 # Default 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
##--------------------------------------------------------------------

##  A Stepper - Right - Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps:32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
##  Uncomment for 350mm build
position_min: 10
position_endstop: 345
position_max: 345
homing_speed: 100  #Max 100
homing_retract_dist: 5
homing_positive_dir: true
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.8 # Default 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left - Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps:32
#endstop_pin: PG10
endstop_pin: probe:z_virtual_endstop

##  Uncomment below for 350mm build
position_max: 310
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 1.0 # Default 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
##--------------------------------------------------------------------

##  Z1 Stepper - Rear Left - Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps:32
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 1.0 # Default 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right - Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps:32
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 1.0 # Default 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right - Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps:32
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 1.0 # Default 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

[virtual_sdcard]
#path: /home/pi/printer_data/gcodes
path: ~/printer_data/gcodes #Sept 12, 5:29pm


#####################################################################
#   Extruder
#####################################################################

##  Connected to MOTOR_6 - Heater - HE0
##  Thermistor - T0
[extruder]
step_pin: PE2
dir_pin: PE3
enable_pin: !PD4
rotation_distance: 12.996  ##EXTRUDER## ## Update value below when you perform extruder calibration
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
gear_ratio: 50:17               #BMG Gear Ratio
microsteps:32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA2
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: Generic 3950
sensor_pin: PF4
min_temp: 5
max_temp: 285
max_power: 1.0
min_extrude_temp: 170
max_extrude_only_distance: 100
##  Try to keep pressure_advance below 1.0
#pressure_advance: 0.05
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: PE1
interpolate: false
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0

#for PETG
#[input_shaper]
#shaper_freq_x: 54.6
#shaper_freq_y: 151.1
#shaper_type: mzv

#for ABS
#[input_shaper]
#shaper_freq_x: 34.99
#shaper_freq_y: 42.78
#shaper_type: mzv

#for TPU
#[input_shaper]
#shaper_freq_x: 50
#shaper_freq_y: 56.47
#shaper_type: mzv


[bed_mesh] # 3 mins @ 7,7
##-New update 7x7x-------------------------------------------------------------------
speed: 300 # (Default Value: 50) The speed in which the tool moves between points.
horizontal_move_z: 5 # (Default 5) The Z coordinate the probe rises to prior to traveling between points.
probe_count: 7,7 # (Default 3,3) The number of points to probe on each axis, specified as X, Y (Prev 7,7 = 3mins)
fade_start: 1.0 # (Default 1) The Z height in which to start phasing out adjustment. It is a good idea to get a few layers down before starting the fade process.
fade_end: 10.0 # (Default 0) The Z height in which fade should complete. If this value is lower than fade_start then fade is disabled. This value may be adjusted depending on how warped the print surface is. A significantly warped surface should fade out over a longer distance. A near flat surface may be able to reduce this value to phase out more quickly. 10mm is a sane value to begin with if using the default value of 1 for fade_start.
mesh_pps: 2,2 # (Default 2.2) The mesh_pps option is shorthand for Mesh Points Per Segment. This option specifies how many points to interpolate for each segment along the X and Y axes.
algorithm: bicubic # (Default lagrange) The algorithm used to interpolate the mesh. May be lagrange or bicubic. Lagrange interpolation is capped at 6 probed points as oscillation tends to occur with a larger number of samples. Bicubic interpolation requires a minimum of 4 probed points along each axis, if less than 4 points are specified then lagrange sampling is forced. If mesh_pps is set to 0 then this value is ignored as no mesh interpolation is done.
bicubic_tension: .2 # (Default 0.2) If the algorithm option is set to bicubic it is possible to specify the tension value. The higher the tension the more slope is interpolated. Be careful when adjusting this, as higher values also create more overshoot, which will result in interpolated values higher or lower than your probed points.
##	Uncomment for 350mm build
mesh_min: 40, 40 # The first probed coordinate, nearest to the origin. This coordinate is relative to the probe's location.
mesh_max: 310,310 # The probed coordinate farthest farthest from the origin. This is not necessarily the last point probed, as the probing process occurs in a zig-zag fashion. As with mesh_min, this coordinate is relative to the probe's location.
##--------------------------------------------------------------------



#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
##  Uncomment the following line if using the default SSR wiring from the docs site
heater_pin: PA3
##  Other wiring guides may use BED_OUT to control the SSR. Uncomment the following line for those cases
#heater_pin: PA1
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6
min_temp: 0
max_temp: 122

#####################################################################
#   Probe
#####################################################################

##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling
[probe]

pin: PG15 # Omron TL-Q5MC2-Z Inductive probe
## For Octopus Pro PROBE port; NPN and PNP proximity switch types can be set by jumper
x_offset: 0
y_offset: 25.0
#z_offset: -0.22
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 2

#####################################################################
#   Fan Control
#####################################################################

##  Print Cooling Fan - FAN0
[fan]
pin: PA8
#kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

##  Hotend Fan - FAN0
[heater_fan hotend_fan]
pin: PE5
max_power: 1.0
#kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

##  Controller fan - FAN2
[controller_fan controller_fan]
pin: PD12
kick_start_time: 0.5
heater: heater_bed
max_power: 1
fan_speed: 0.5

##  Exhaust fan - FAN3
[heater_fan exhaust_fan]
pin: PD14
max_power: 1
shutdown_speed: 0.0
kick_start_time: 5.0
heater: heater_bed
heater_temp: 60
fan_speed: 0.5

#  Nevermorefilter fan - FAN4
#[heater_fan filter_fan]
#pin: PD14
#max_power: 0.8
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#fan_speed: 0.7

#  Nevermorefilter fan - FAN4
#[heater_fan filter_fan2]
#pin: PD15
#max_power: 0.8
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#fan_speed: 0.7

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
[output_pin caselight]
pin: PD15
pwm:true
shutdown_value: 0
value:1
cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
#timeout: 1800 #Old#
#timeout: 5000 #New#

[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
#home_xy_position:229,345
home_xy_position:175,175
speed:50
z_hop:10 # Change Sept 13, 6:48pm 10 > 40 

##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]

#--------------------------------------------------------------------
##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
gantry_corners:
   -60,-10
   410,420
##  Probe points
points:
   50,25
   50,275
   300,275
   300,25

#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

##  mini12864 LCD Display
[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

##  To control Neopixel RGB in mini12864 display
[neopixel btt_mini12864]
pin: EXP1_6
chain_count: 3
initial_RED: 0.
initial_GREEN: 0.5
initial_BLUE: 0.5
color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------


#######################################################################################################################################
#   Macros
#######################################################################################################################################

#####################################################################
# PRINT_START
#####################################################################

[gcode_macro PRINT_START]
gcode:        
  
# This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  #{% set BED_TEMP = params.BED_TEMP|default(90)|float %}
  #{% set target_extruder = params.EXTRUDER_TEMP|int %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(245)|float %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

# Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  #STATUS_HOMING         # Sets SB-leds to homing-mode
    G28                   # Full home (XYZ)
    G90                   # Absolut position

  ##  Uncomment for bed mesh (1 of 2)
    BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    led_status_red                                      # Sets SB-leds to heating-mode
    M106 S255                                           # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    led_status_red                                      # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F6000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    G4 S60                                              # Waits 60 seconds for the bedtemp to stabilize
  {% endif %}

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  #SET_DISPLAY_TEXT MSG="Hotend: 150c"                   # Displays info
  #M109 S150                                             # Heats the nozzle to 150c
  SET_DISPLAY_TEXT MSG="Material temp"                   # Displays info
  M109 I                                                 # Heats the nozzle to Material temp

  ##  Uncomment for V2 (Quad gantry level AKA QGL)
  #SET_DISPLAY_TEXT MSG="Bed Mesh Cal.."                 # Displays info
  #BED_MESH_CALIBRATE
  #PRINT_AREA_BED_MESH_CALIBRATE                         # Calibrates specific print area 
  #PULSE_COLOR                                           # Sets SB-leds to heating-mode
  QUAD_GANTRY_LEVEL                                     # Levels the buildplate via QGL
  G28 Z                                                 # Homes Z again after QGL

 ##  Uncomment for bed mesh (2 of 2)
  SET_DISPLAY_TEXT MSG="Bed mesh"                       # Displays info
  PULSE_COLOR                                           # Sets SB-leds to heating-mode
  bed_mesh_calibrate                                    # Starts bed mesh
  #G28 Z                                                 # Homes Z again after QGL

  # Heats up the nozzle up to target via data from slicer
  #SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"     # Displays info
  SET_DISPLAY_TEXT MSG="Hotend: {EXTRUDER_TEMP}c"       # Displays info
  led_status_white                                        # Sets SB-leds to heating-mode
  G1 X309 Y345 Z5 F5000                                 # Goes to Clean Nozzle position
  #G1 X{x_wait} Y{y_wait} Z15 F9000                     # Goes to center of the bed
  M107                                                  # Turns off partcooling fan
  M109 S{EXTRUDER_TEMP}                                 # Wait for nozzle to finish heating
  #M109 S{target_extruder}                              # Heats the nozzle to printing temp

  # Gets ready to print by doing a purge line and updating the SB-leds
  CLEAN_NOZZLE
  SET_DISPLAY_TEXT MSG="Printing..."                    # Displays info
  led_status_blue                                       # Sets SB-leds to heating-mode
  #G0 X{x_wait -50} Y4 F10000                           # Moves to starting point
  G0 X50 Y4 F10000                                      # Moves to starting point
  #G0 Z0.4                                               # Raises Z to 0.4
  G91                                                   # Incremental positioning 
  #G1 X100 E20 F1000                                     # Purge line
  G90                                                   # Absolut position


[gcode_macro G32]
gcode:
    STATUS_HOMING
    BED_MESH_CLEAR

    ; stealth chop tuning process
    # motors off
    ;M84
    ;G4 P200

    # enable motors (this seems to energize the steppers in Klipper and no micro-moves are needed)
    ; SET_STEPPER_ENABLE STEPPER=stepper_x  ENABLE=1
    ; SET_STEPPER_ENABLE STEPPER=stepper_y  ENABLE=1
    ; SET_STEPPER_ENABLE STEPPER=stepper_z  ENABLE=1
    ; SET_STEPPER_ENABLE STEPPER=stepper_z1 ENABLE=1
    ; SET_STEPPER_ENABLE STEPPER=stepper_z2 ENABLE=1
    ; SET_STEPPER_ENABLE STEPPER=stepper_z3 ENABLE=1
    #wait at least 130ms for StealthChop to sense standstill current
    ;G4 P200

    #now proceed to home as normal
    STATUS_HOMING
    G28
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    STATUS_HOMING
    G28

[gcode_macro PARK_REAR]
gcode:
    SAVE_GCODE_STATE NAME=PARK_REAR
    ; park the head at the front of the printer
    G90
    #G1 X150 Y300 F3000.0
    G1 X309 Y345 Z5 F3000.0
    RESTORE_GCODE_STATE NAME=PARK_REAR

[gcode_macro PARK_CENTER]
gcode:
    SAVE_GCODE_STATE NAME=PARK_CENTER
    ; park the head at the front of the printer
    G90
    G1 X150 Y150 F3000.0
    RESTORE_GCODE_STATE NAME=PARK_CENTER

[gcode_macro PARK_FRONT]
gcode:
    SAVE_GCODE_STATE NAME=PARK_FRONT
    ; park the head at the front of the printer
    G90
    G1 X150 Y50 F3000.0
    RESTORE_GCODE_STATE NAME=PARK_FRONT

[gcode_macro SAFE_LIFT_Z]
gcode:
    SAVE_GCODE_STATE NAME=SAFE_LIFT_Z
    # user parameters
    {% set z_height      = params.Z|default(0.0)|float %}
    {% set speed         = params.F|default(printer.gcode_move.speed)|int %}
    {% set axis_maximum  = printer.toolhead.axis_maximum %}
	{% set position      = printer.toolhead.position     %}

    # compute the minimum safe upward move size
    {% set z_height = [z_height, axis_maximum.z - position.z]|min|float%}

    G91
    G1 Z{z_height} F{speed}

    RESTORE_GCODE_STATE NAME=SAFE_LIFT_Z

[gcode_macro PRINT_AREA_BED_MESH_CALIBRATE]
description: Sets the bed mesh area based on the size & location of the print
gcode:
    # defaults from bed_mesh
    {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
    {% set bed_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
    {% set bed_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
    {% set bed_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
    {% set bed_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}
    {% set max_probe_count_x = bedMeshConfig.probe_count.split(",")[0]|int %}
    {% set max_probe_count_y = bedMeshConfig.probe_count.split(",")[1]|int %}
    # user parameters
    {% set area_min_x = params.PRINT_START_X|default(bed_min_x)|float %}
    {% set area_min_y = params.PRINT_START_Y|default(bed_min_y)|float %}
    {% set area_max_x = params.PRINT_END_X|default(bed_max_x)|float %}
    {% set area_max_y = params.PRINT_END_Y|default(bed_max_y)|float %}
    {% set mesh_area_padding = params.MESH_ARE_PADDING|default(5.0)|float %}
    {% set min_probe_count_x = params.MIN_PROBE_COUNT_X|default(3)|int %}
    {% set min_probe_count_y = params.MIN_PROBE_COUNT_Y|default(3)|int %}

    # add padding to the print area if possible
    {% set area_min_x = [area_min_x - mesh_area_padding, bed_min_x]|max %}
    {% set area_min_y = [area_min_y - mesh_area_padding, bed_min_y]|max %}
    {% set area_max_x = [area_max_x + mesh_area_padding, bed_max_x]|min %}
    {% set area_max_y = [area_max_y + mesh_area_padding, bed_max_y]|min %}

    # compute raw scaled values for the probe counts from 0 to max_probe_count_x/y
    {% set probe_count_unscaled_x = ((area_max_x - area_min_x)/bed_max_x) * max_probe_count_x|float %}
    {% set probe_count_unscaled_y = ((area_max_y - area_min_y)/bed_max_y) * max_probe_count_y|float %}

    # scale those values up from: 0 - min_probe_count_x/y to the scale: min_probe_count_x/y - min_probe_count_x/y
    {% set probe_count_x = ((max_probe_count_x - min_probe_count_x) * probe_count_unscaled_x / max_probe_count_x + min_probe_count_x)|round|int %}
    {% set probe_count_y = ((max_probe_count_y - min_probe_count_y) * probe_count_unscaled_y / max_probe_count_y + min_probe_count_y)|round|int %}

    {% set relative_reference_index = (((probe_count_x * probe_count_y) - 1) / 2)|int %}

    BED_MESH_CALIBRATE MESH_MIN={area_min_x},{area_min_y} MESH_MAX={area_max_x},{area_max_y} PROBE_COUNT={("%d,%d" % (probe_count_x,probe_count_y))} RELATIVE_REFERENCE_INDEX={relative_reference_index}

[gcode_macro PURGE_LINE]
gcode:
    SAVE_GCODE_STATE NAME=PURGE_LINE
    {% set purge_start_x = params.PRINT_START_X|default(5.0)|float %}
    {% set purge_start_y = params.PRINT_START_Y|default(-5.0)|float %}

    ; purge/prime nozzle
    G90 ; use absolute coordinates
    ; go to the start of the print area, but -5 in Y
    G1 X{purge_start_x} Y{purge_start_y} Z0.3 F7200.0 ; go to the purge start location
    G91 ; relative coordinates
    M83 ; extruder relative mode
    G92 E0.0
    G1 X40.0 E10.0 F1000.0  ; narrow start line
    G1 X40.0 E15.0 F1000.0  ; priming thick outro line
    G92 E0.0
    G1 X3.0 Y3.0 F1000.0    ; move the nozzle away from the end of the purge line so the print doesnt drage the nozzle back throught it.
    G1 F7200.0

    RESTORE_GCODE_STATE NAME=PURGE_LINE


[gcode_macro PRINT_WARMUP]
description: Perform initial homing and heating tasks
variable_parameter_EXTRUDER_TEMP : 0
variable_parameter_BED_TEMP : 0
variable_parameter_PRINT_START_X : 0
variable_parameter_PRINT_START_Y : 0
variable_parameter_PRINT_END_X : 0
variable_parameter_PRINT_END_Y : 0
variable_callback : None
gcode:
    #{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(240)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP * 1.0 %}
    {% set BED_TEMP = params.BED_TEMP|default(90)|float %}
   # SHOW_BUILD_SHEET

    M104 S{EXTRUDER_TEMP * 0.75}        ; set extruder temperature to 75%
    M140 S{BED_TEMP}                    ; set bed temprature
    M106 S25                            ; Enable the part cooling fan to keep the probe and cooling ducts cool during heat-up
    G32                                 ; home all axes
    STATUS_HEATING
    PARK_CENTER                         ; place tool head in the middle of the print volume for even frame heating

    # wait for top bed sensor to be in thermal equilibrium:
    HEAT_SOAK HEATER='heater_bed' TARGET={BED_TEMP} SOAKER='temperature_sensor top_bed' CANCEL='CANCEL_PRINT'

[gcode_macro PRINT_END]
description: tasks to reset the printer state and cool everything down.
gcode:
    M400                                                # wait for move buffer to clear
    G92 E0                                              # zero the extruder
    G91                                                 # relative positioning
    TURN_OFF_HEATERS
    M107                                                # turn off fan
    SET_FRAME_COMP ENABLE=0
    SAFE_LIFT_Z Z=50 F=3000.0                           # Change Sept 13, 6:48pm Z=10 > Z=20 
    G28 Z                                               # Home 
    #G1 X309 Y345 Z5 F5000                               # Goes to Clean Nozzle position
    PARK_REAR
    G4 P60000                                           # Waits 60 seconds for the bedtemp to stabilize             
    CLEAN_NOZZLE  
    #PARK_REAR
    #STATUS_OFF
    # TODO: it would be nice to keep the part cooling fan on until the hot end fan shuts off.

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    G1 X309 Y345 Z5 F5000                               # Goes to Clean Nozzle position (waits 50 seconds)              
    CLEAN_NOZZLE
    M107
    CLEAR_PAUSE
    SAFE_LIFT_Z Z=20 F=3000.0 # Change Sept 13, 6:48pm Z=10 > Z=20 
    G4 S60                                              # Waits 60 seconds for the bedtemp to stabilize             
    CLEAN_NOZZLE 
    PARK_REAR
    BED_MESH_CLEAR
    SET_FRAME_COMP ENABLE=0
    BASE_CANCEL_PRINT

[gcode_macro list_sensors]
gcode:
  { action_respond_info(printer.heaters.available_heaters | join(', ')) }
  { action_respond_info(printer.heaters.available_sensors | join(', ')) }

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 31.259
#*# pid_ki = 1.930
#*# pid_kd = 126.599
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 36.073
#*# pid_ki = 1.129
#*# pid_kd = 288.134
#*#
#*# [probe]
#*# z_offset = 1.290
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.745000, 0.708750, 0.687500, 0.667500, 0.682500, 0.721250, 0.792500
#*# 	0.721250, 0.693750, 0.682500, 0.683750, 0.705000, 0.756250, 0.835000
#*# 	0.717500, 0.693750, 0.685000, 0.687500, 0.720000, 0.778750, 0.857500
#*# 	0.713750, 0.687500, 0.678750, 0.696250, 0.740000, 0.800000, 0.885000
#*# 	0.743750, 0.726250, 0.731250, 0.752500, 0.791250, 0.865000, 0.948750
#*# 	0.801250, 0.792500, 0.800000, 0.820000, 0.870000, 0.946250, 1.042500
#*# 	0.787500, 0.776250, 0.803750, 0.843750, 0.905000, 0.973750, 1.072500
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 7
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 310.0
#*#
#*# [stepper_z]
#*# position_endstop = 1.300
